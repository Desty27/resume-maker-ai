import streamlit as st
from data_handler import save_user_data
from resume_generator import generate_resume_with_openai

# Translation dictionaries
TRANSLATIONS = {
    'en': {
        'title': "üìù Free Resume Maker",
        'personal': "Personal Details",
        'name': "Full Name*",
        'father': "Father's Name*",
        'village_post': "Village/Post*",
        'landmark': "Near Location",
        'tehsil': "Tehsil",
        'district': "District*",
        'state': "State*",
        'email': "Email",
        'phone': "Phone*",
        'objective': "Career Objective*",
        'education': "Education Details",
        'tenth': "10th Details*",
        'tenth_board': "10th Board*",
        'tenth_year': "10th Passing Year*",
        'tenth_percent': "10th Percentage*",
        'twelfth': "12th Details (Optional)",
        'twelfth_board': "12th Board",
        'twelfth_year': "12th Passing Year",
        'twelfth_percent': "12th Percentage",
        'diploma': "Diploma Details (Optional)",
        'diploma_name': "Diploma Name",
        'diploma_uni': "University",
        'diploma_year': "Passing Year",
        'diploma_percent': "Percentage",
        'project': "Project",
        'training': "Training",
        'submit': "Generate Resume"
    },
    'hi': {
        'title': "üìù ‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Ç‡§Æ ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§§‡§æ",
        'personal': "‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§µ‡§ø‡§µ‡§∞‡§£",
        'name': "‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ‡§Æ*",
        'father': "‡§™‡§ø‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ*",
        'village_post': "‡§ó‡§æ‡§Å‡§µ/‡§™‡•ã‡§∏‡•ç‡§ü*",
        'landmark': "‡§®‡§ø‡§ï‡§ü ‡§∏‡•ç‡§•‡§æ‡§®",
        'tehsil': "‡§§‡§π‡§∏‡•Ä‡§≤",
        'district': "‡§ú‡§ø‡§≤‡§æ*",
        'state': "‡§∞‡§æ‡§ú‡•ç‡§Ø*",
        'email': "‡§à‡§Æ‡•á‡§≤",
        'phone': "‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞*",
        'objective': "‡§ï‡•à‡§∞‡§ø‡§Ø‡§∞ ‡§â‡§¶‡•ç‡§¶‡•á‡§∂‡•ç‡§Ø*",
        'education': "‡§∂‡•à‡§ï‡•ç‡§∑‡§ø‡§ï ‡§µ‡§ø‡§µ‡§∞‡§£",
        'tenth': "10‡§µ‡•Ä‡§Ç ‡§µ‡§ø‡§µ‡§∞‡§£*",
        'tenth_board': "10‡§µ‡•Ä‡§Ç ‡§¨‡•ã‡§∞‡•ç‡§°*",
        'tenth_year': "10‡§µ‡•Ä‡§Ç ‡§™‡§æ‡§∏‡§ø‡§Ç‡§ó ‡§µ‡§∞‡•ç‡§∑*",
        'tenth_percent': "10‡§µ‡•Ä‡§Ç ‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§*",
        'twelfth': "12‡§µ‡•Ä‡§Ç ‡§µ‡§ø‡§µ‡§∞‡§£ (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï)",
        'twelfth_board': "12‡§µ‡•Ä‡§Ç ‡§¨‡•ã‡§∞‡•ç‡§°",
        'twelfth_year': "12‡§µ‡•Ä‡§Ç ‡§™‡§æ‡§∏‡§ø‡§Ç‡§ó ‡§µ‡§∞‡•ç‡§∑",
        'twelfth_percent': "12‡§µ‡•Ä‡§Ç ‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§",
        'diploma': "‡§°‡§ø‡§™‡•ç‡§≤‡•ã‡§Æ‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£ (‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï)",
        'diploma_name': "‡§°‡§ø‡§™‡•ç‡§≤‡•ã‡§Æ‡§æ ‡§®‡§æ‡§Æ",
        'diploma_uni': "‡§µ‡§ø‡§∂‡•ç‡§µ‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§≤‡§Ø",
        'diploma_year': "‡§™‡§æ‡§∏‡§ø‡§Ç‡§ó ‡§µ‡§∞‡•ç‡§∑",
        'diploma_percent': "‡§™‡•ç‡§∞‡§§‡§ø‡§∂‡§§",
        'project': "‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü",
        'training': "‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£",
        'submit': "‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Ç‡§Æ ‡§¨‡§®‡§æ‡§è‡§Ç"
    }
}

EDUCATION_OPTIONS = {
    'boards': {
        'en': ["MP Board", "CBSE", "ICSE", "State Board", "Other"],
        'hi': ["‡§è‡§Æ‡§™‡•Ä ‡§¨‡•ã‡§∞‡•ç‡§°", "‡§∏‡•Ä‡§¨‡•Ä‡§è‡§∏‡§à", "‡§Ü‡§à‡§∏‡•Ä‡§è‡§∏‡§à", "‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§¨‡•ã‡§∞‡•ç‡§°", "‡§Ö‡§®‡•ç‡§Ø"]
    }
}

def get_translation(lang, key):
    return TRANSLATIONS[lang].get(key, key)

def main():
    st.set_page_config(page_title="Resume Maker", page_icon="üìù")
    
    # Language selector
    lang = st.sidebar.selectbox("‡§≠‡§æ‡§∑‡§æ/ Language", ["en", "hi"])
    
    st.title(get_translation(lang, 'title'))
    
    with st.form("resume_form"):
        # Personal Information
        st.header(get_translation(lang, 'personal'))
        name = st.text_input(get_translation(lang, 'name'), placeholder="Rahul Sharma" if lang == 'en' else "‡§∞‡§æ‡§π‡•Å‡§≤ ‡§∂‡§∞‡•ç‡§Æ‡§æ")
        father_name = st.text_input(get_translation(lang, 'father'), placeholder="Ravi Sharma" if lang == 'en' else "‡§∞‡§µ‡§ø ‡§∂‡§∞‡•ç‡§Æ‡§æ")
        
        # Address Details
        village_post = st.text_input(get_translation(lang, 'village_post'), placeholder="Khor" if lang == 'en' else "‡§ñ‡•ã‡§∞")
        landmark = st.text_input(get_translation(lang, 'landmark'), placeholder="Near Indra Colony" if lang == 'en' else "‡§á‡§Ç‡§¶‡•ç‡§∞‡§æ ‡§ï‡•â‡§≤‡•ã‡§®‡•Ä ‡§ï‡•á ‡§™‡§æ‡§∏")
        tehsil = st.text_input(get_translation(lang, 'tehsil'), placeholder="Jawad" if lang == 'en' else "‡§ú‡§æ‡§µ‡§¶")
        
        col1, col2 = st.columns(2)
        with col1:
            district = st.text_input(get_translation(lang, 'district'), placeholder="Neemuch" if lang == 'en' else "‡§®‡•Ä‡§Æ‡§ö")
        with col2:
            state = st.text_input(get_translation(lang, 'state'), placeholder="Madhya Pradesh" if lang == 'en' else "‡§Æ‡§ß‡•ç‡§Ø ‡§™‡•ç‡§∞‡§¶‡•á‡§∂")
        
        email = st.text_input(get_translation(lang, 'email'), placeholder="example@email.com")
        phone = st.text_input(get_translation(lang, 'phone'), placeholder="9876543210")

        # Career Objective
        st.header(get_translation(lang, 'objective'))
        objective = st.text_area(get_translation(lang, 'objective'), height=100,
                               placeholder="To achieve a challenging position..." if lang == 'en' else "‡§â‡§¶‡•ç‡§Ø‡•ã‡§ó ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§ö‡•Å‡§®‡•å‡§§‡•Ä‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∏‡•ç‡§•‡§æ‡§® ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è...")

        # Education Details
        st.header(get_translation(lang, 'education'))
        
        # Compulsory 10th details
        st.subheader(get_translation(lang, 'tenth'))
        col1, col2, col3 = st.columns(3)
        with col1:
            tenth_board = st.selectbox(get_translation(lang, 'tenth_board'), EDUCATION_OPTIONS['boards'][lang])
        with col2:
            tenth_year = st.number_input(get_translation(lang, 'tenth_year'), 1990, 2024, 2010)
        with col3:
            tenth_percent = st.number_input(get_translation(lang, 'tenth_percent'), 0.0, 100.0, 60.0)

        # Optional 12th details
        st.subheader(get_translation(lang, 'twelfth'))
        add_twelfth = st.checkbox(get_translation(lang, 'twelfth').split(" (")[0])
        if add_twelfth:
            col1, col2, col3 = st.columns(3)
            with col1:
                twelfth_board = st.selectbox(get_translation(lang, 'twelfth_board'), EDUCATION_OPTIONS['boards'][lang])
            with col2:
                twelfth_year = st.number_input(get_translation(lang, 'twelfth_year'), 1990, 2024, 2012)
            with col3:
                twelfth_percent = st.number_input(get_translation(lang, 'twelfth_percent'), 0.0, 100.0, 60.0)

        # Optional Diploma details
        st.subheader(get_translation(lang, 'diploma'))
        add_diploma = st.checkbox(get_translation(lang, 'diploma').split(" (")[0])
        if add_diploma:
            diploma_name = st.text_input(get_translation(lang, 'diploma_name'), placeholder="Diploma in Mechanical Engineering" if lang == 'en' else "‡§Æ‡•à‡§ï‡•á‡§®‡§ø‡§ï‡§≤ ‡§á‡§Ç‡§ú‡•Ä‡§®‡§ø‡§Ø‡§∞‡§ø‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§°‡§ø‡§™‡•ç‡§≤‡•ã‡§Æ‡§æ")
            university = st.text_input(get_translation(lang, 'diploma_uni'), placeholder="RGPV Bhopal" if lang == 'en' else "‡§Ü‡§∞‡§ú‡•Ä‡§™‡•Ä‡§µ‡•Ä ‡§≠‡•ã‡§™‡§æ‡§≤")
            col1, col2 = st.columns(2)
            with col1:
                diploma_year = st.number_input(get_translation(lang, 'diploma_year'), 1990, 2024, 2015)
            with col2:
                diploma_percent = st.number_input(get_translation(lang, 'diploma_percent'), 0.0, 100.0, 65.0)

        # Project and Training
        st.header(get_translation(lang, 'project'))
        project = st.text_input(get_translation(lang, 'project'), placeholder="Regenerative Braking System" if lang == 'en' else "‡§∞‡•Ä‡§ú‡§®‡§∞‡•á‡§ü‡§ø‡§µ ‡§¨‡•ç‡§∞‡•á‡§ï‡§ø‡§Ç‡§ó ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ")

        st.header(get_translation(lang, 'training'))
        training = st.text_input(get_translation(lang, 'training'), placeholder="Industrial Training" if lang == 'en' else "‡§î‡§¶‡•ç‡§Ø‡•ã‡§ó‡§ø‡§ï ‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£")

        submitted = st.form_submit_button(get_translation(lang, 'submit'))

    if submitted:
        # Prepare education data
        education_data = {
            'tenth': {
                'board': tenth_board,
                'year': tenth_year,
                'percent': tenth_percent
            }
        }
        
        if add_twelfth:
            education_data['twelfth'] = {
                'board': twelfth_board,
                'year': twelfth_year,
                'percent': twelfth_percent
            }

        # Prepare technical data
        technical_data = {}
        if add_diploma:
            technical_data['diploma'] = {
                'name': diploma_name,
                'university': university,
                'year': diploma_year,
                'percent': diploma_percent
            }

        user_data = {
            "personal": {
                "name": name,
                "father_name": father_name,
                "address": {
                    "village_post": village_post,
                    "landmark": landmark,
                    "tehsil": tehsil,
                    "district": district,
                    "state": state
                },
                "contact": {
                    "email": email,
                    "phone": phone
                }
            },
            "objective": objective,
            "education": education_data,
            "technical": technical_data,
            "project": project,
            "training": training
        }

        save_user_data(user_data)
        
        with st.spinner("Generating resume..." if lang == 'en' else "‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Ç‡§Æ ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à..."):
            html_content = generate_resume_with_openai(user_data, st.secrets["OPENAI_API_KEY"])
        
        if html_content:
            st.success("Resume generated!" if lang == 'en' else "‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Ç‡§Æ ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à!")
            st.download_button(
                label="Download" if lang == 'en' else "‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
                data=html_content,
                file_name=f"{name}_Resume.html",
                mime="text/html"
            )

if __name__ == "__main__":
    main()